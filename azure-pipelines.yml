
trigger:
  - main
variables:
    tag: '$(Build.BuildId)'
    repositoryName: 'soulredouane/jesa-php'
    phpVersion: '8.2.27'
    k8sNamespace: 'jesa-med-namespace'
    jobName: 'azp-agent-job'
    sonarHostUrl: 'http://sonarqube-sonarqube-lts.sonarqube.svc.cluster.local:9000'  # Fully qualified SonarQube service URL
    sonarToken: '95ed008304496205800ee04653a3189e62c3b9db'
    TRIVY_SERVICE_URL: 'http://trivy-service.trivy.svc.cluster.local:5000/scan'
stages: 
  # - stage: Build_And_Test
  #   # dependsOn: Setup_Custom_Agent
  #   jobs:
      
  #     - job: BuildTest
  #       pool:
  #         name: 'default'
  #         demands:
  #           #  - agent.name -equals dockeragent-docker-agent
  #           - agent.name -equals dockeragent-soul-agent
  #       steps:
          # - script: |
          #     sonar-scanner \
          #       -Dsonar.projectKey=azure-devops \
          #       -Dsonar.sources=. \
          #       -Dsonar.host.url=$(sonarHostUrl) \
          #       -Dsonar.login=$(sonarToken) \
          #       > sonar-scan-output.txt 2>&1
          #   displayName: 'Run SonarQube Scan'
          # Publish scan output as an artifact
          # - task: PublishBuildArtifacts@1
          #   inputs:
          #     pathToPublish: 'sonar-scan-output.txt'
          #     artifactName: 'SonarQubeScanResults'
          #     publishLocation: 'Container'
          #   displayName: 'Publish SonarQube Scan Output'

          # - task: Docker@2
          #   displayName: 'Build Docker Image'
          #   inputs:
          #     command: build
          #     repository: $(repositoryName)
          #     dockerfile: '**/Dockerfile'
          #     containerRegistry: dockerhub-registry
          #     tags: |
          #       $(tag)

          # - script: |
          #     docker run --rm -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy:latest image --exit-code 0 --no-progress --format json $(repositoryName):$(tag) > trivy-scan-result.json
          #   displayName: 'Scan Docker Image with Trivy CLI'

          # Publish Trivy scan results as an artifact
          # - task: PublishBuildArtifacts@1
          #   inputs:
          #     pathToPublish: 'trivy-scan-result.json'
          #     artifactName: 'TrivyScanResult'
          #     publishLocation: 'Container'
          #   displayName: 'Publish Trivy Scan Result'

         
          # - task: Docker@2
          #   displayName: 'Push Docker Image'
          #   inputs:
          #     command: push
          #     repository: $(repositoryName)
          #     containerRegistry: dockerhub-registry
          #     tags: |
          #       $(tag)
                
  - stage: Deploy
    # dependsOn: Build_And_Test
    # condition: succeeded()
    jobs:
      - job: DeployToDev
        pool:
          name: 'default'
          demands:
            - agent.name -equals  dockeragent-soul-agent
        steps:
          - task: SSH@0
            displayName: 'Deploy to Dev Server'
            inputs:
              sshEndpoint: 'jesa-med-ssh'
              runOptions: 'commands'
              commands: |
                docker pull $(repositoryName):$(tag)
                docker stop jesa-php-container || true
                docker rm jesa-php-container || true
                docker run -d --name jesa-php-container -p 8080:80 $(repositoryName):$(tag)